security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: app_user_provider

            # form_login:
            #     login_path: app_login
            #     check_path: app_login
            #     enable_csrf: true

            logout:
                path: app_logout
                target: all_posts

            custom_authenticator: App\Security\LoginFormAuthenticator

            # Define the entry point explicitly
            entry_point: App\Security\LoginFormAuthenticator
            
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                
    access_control:
        # Anyone can access the login and registration routes
        # - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }

        # Require users to be fully authenticated (not anonymous) to access the dashboard
        - { path: ^/all-posts, roles: ROLE_USER }
        - { path: ^/create-post, roles: ROLE_USER }
        - { path: ^/edit-post, roles: ROLE_USER }
        - { path: ^/delete-post, roles: ROLE_ADMIN }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
